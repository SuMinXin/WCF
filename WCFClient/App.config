<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
    </startup>
    <system.serviceModel>
       <!--
	    <bindings>
            <basicHttpBinding>
                <binding name="BasicHttpBinding_IService" />
            </basicHttpBinding>
        </bindings>
	   -->
		<bindings>
			<wsHttpBinding>
				<!--
      This configuration defines the security mode as Message and
      the clientCredentialType as Username.
      -->
				<binding name="Binding1">
					<security mode="Message">
						<message clientCredentialType="UserName"/>
					</security>
				</binding>
			</wsHttpBinding>
		</bindings>
		<!-- 
        <client>
            <endpoint address="http://localhost:60366/Service.svc" binding="basicHttpBinding"
                bindingConfiguration="BasicHttpBinding_IService" contract="ServiceReference1.IService"
                name="BasicHttpBinding_IService" />
        </client>
		-->
		<client />
		<!--For debugging purposes set the includeExceptionDetailInFaults attribute to true.-->
		<behaviors>
			<endpointBehaviors>
				<behavior name="ClientCredentialsBehavior">
					<!--
      Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate
      is in the user's Trusted People store, then it is trusted without performing a
      validation of the certificate's issuer chain. This setting is used here for convenience so that the
      sample can be run without having to have certificates issued by a certification authority (CA).
      This setting is less secure than the default, ChainTrust. The security implications of this
      setting should be carefully considered before using PeerOrChainTrust in production code.
      -->
					<serviceCredentials>
						<serviceCertificate findValue="localhost" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" />
					</serviceCredentials>
							<!--
            Setting the certificateValidationMode to PeerOrChainTrust means that if the certificate
            is in the user's Trusted People store, then it will be trusted without performing a
            validation of the certificate's issuer chain. This setting is used here for convenience so that the
            sample can be run without having to have certificates issued by a certification authority (CA).
            This setting is less secure than the default, ChainTrust. The security implications of this
            setting should be carefully considered before using PeerOrChainTrust in production code.
            -->
							<authentication certificateValidationMode="PeerOrChainTrust" />
						</clientCertificate>
					</serviceCredentials>
				</behavior>
			</endpointBehaviors>
		</behaviors>
    </system.serviceModel>
</configuration>